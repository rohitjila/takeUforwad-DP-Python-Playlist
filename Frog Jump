#Memoization + Recursion
def f(arr,ind,dp):
    if (ind <= 0):
        return 0
    if (dp[ind] != -1): return dp[ind]
    left = f(arr,ind-1,dp) + abs(arr[ind] - arr[ind-1])
    right=9999999
    if (ind > 1): 
        right = f(arr,ind-2,dp) + abs(arr[ind] - arr[ind - 2])
    dp[ind] = min(left,right)
    return dp[ind]

def frogJump(n ,arr):
    dp=[-1]*(n)
    ans=f(arr,n-1,dp)
    return ans
bottom - Up Approach
    dp=[0]*(n)
    dp[0]=0
    for i in range(1,n):
        left = dp[i-1] + abs(heights[i] - heights[i-1])
        right = 999999
        if (i > 1):
            right = dp[i-2] + abs(heights[i] - heights[i-2])
        dp[i] = min(left,right)
    return dp[n-1]
