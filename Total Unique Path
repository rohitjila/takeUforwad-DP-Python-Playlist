def uniquePaths(m, n):
    dp=[[-1 for i in range(n+1)] for i in range(m+1)]
    for i in range(n):
        dp[0][i]=1
    for i in range(m):
        dp[i][0]=1
    for i in range(1,m+1):
        for j in range(1,n+1):
            left=dp[i][j-1]
            up=dp[i-1][j]
            dp[i][j]=left + up
    return dp[m-1][n-1]
    
    #     i=m-1
#     j=n-1
    dp=[[None for i in range(n+1)] for i in range(m+1)]
    for i in range(n):
        dp[0][i]=1
    for i in range(m):
        dp[i][0]=1
    for i in range(1,m+1):
        for j in range(1,n+1):
            left=dp[i-1][j]
            up=dp[i][j-1]
    		dp[i][j]=left+up
     return dp[m-1][n-1]
    return solve(i,j,dp)


def solve(i,j,dp):
    
    if (i < 0 or j < 0):
        return 0
    if (i == 0 and j == 0):
        return 1
    if (dp[i][j] != -1):
        return dp[i][j]
    
    left=solve(i,j-1,dp)
    up=solve(i-1,j,dp)
    dp[i][j] = (up+left)
    return dp[i][j]
